---
import '../styles/global.css';
import LanguagePicker from '../components/LanguagePicker.astro';
import ThemeToggle from '../components/ThemeToggle.astro';
import SearchBar from '../components/SearchBar.astro';
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';

interface Props {
  title: string;
  description?: string;
}

const { title, description = 'A modern blog built with Astro' } = Astro.props;
const url = Astro.url;
const lang = getLangFromUrl(url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const navItems = [
  { title: t('nav.home'), path: translatePath('/') },
  { 
    title: t('nav.spaces'), 
    children: [
      { title: t('nav.dev'), path: translatePath('/category/dev') },
      { title: t('nav.ai'), path: translatePath('/category/ai') },
      { title: t('nav.daily'), path: translatePath('/category/daily') }
    ]
  },
  { title: t('nav.about'), path: translatePath('/about') }
];
---

<!DOCTYPE html>
<html lang={lang} class="h-full">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <title>{title}</title>
    <script is:inline>
      // Initialize dark mode immediately to prevent FOUC (flash of unstyled content)
      const userTheme = localStorage.getItem('theme');
      const systemDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
      
      if (userTheme === 'dark' || (!userTheme && systemDarkMode)) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    </script>
  </head>
  <body class="min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900 dark:text-gray-100">
    <header class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 relative z-50">
      <div class="container-custom">
        <!-- Top bar with search, theme toggle and language picker -->
        <div class="py-3 flex justify-between items-center border-b border-gray-100 dark:border-gray-700">
          <a href={translatePath('/')} class="text-2xl font-serif font-bold text-primary-700 dark:text-primary-400">
            TechHub
          </a>
          <div class="flex items-center gap-6">
            <ThemeToggle />
            <LanguagePicker />
            <SearchBar lang={lang} />
          </div>
        </div>
        
        <!-- Main navigation -->
        <nav class="flex justify-between items-center py-4">
          <ul class="flex items-center gap-8">
            {navItems.map(item => (
              <li class="relative group">
                {item.children ? (
                  <div class="relative">
                    <button 
                      class="flex items-center gap-1 text-gray-600 hover:text-primary-600 cursor-pointer"
                      aria-haspopup="true"
                      id="spacesDropdownButton"
                    >
                      {item.title}
                      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                      </svg>
                    </button>
                    <div id="spacesDropdown" class="absolute left-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 hidden">
                      {item.children.map(child => (
                        <a 
                          href={child.path}
                          class="block px-4 py-2 text-gray-800 hover:bg-primary-50 hover:text-primary-600"
                        >
                          {child.title}
                        </a>
                      ))}
                    </div>
                  </div>
                ) : (
                  <a 
                    href={item.path}
                    class="text-gray-600 hover:text-primary-600 transition-colors duration-200"
                  >
                    {item.title}
                  </a>
                )}
              </li>
            ))}
          </ul>
          
          <button class="bg-primary-600 text-white px-4 py-2 rounded-full hover:bg-primary-700 transition-colors duration-200">
            Subscribe
          </button>
        </nav>
      </div>
    </header>

    <main class="flex-grow container-custom py-12">
      <slot />
    </main>

    <!-- Rest of the footer remains the same -->
    <footer class="bg-gray-900 dark:bg-gray-950 text-white mt-12">
      <!-- Previous footer content remains unchanged -->
    </footer>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const dropdownButton = document.getElementById('spacesDropdownButton');
        const dropdown = document.getElementById('spacesDropdown');
        
        if (dropdownButton && dropdown) {
          // Toggle dropdown on button click
          dropdownButton.addEventListener('click', (e) => {
            e.stopPropagation();
            dropdown.classList.toggle('hidden');
          });
          
          // Close dropdown when clicking elsewhere
          document.addEventListener('click', (e) => {
            if (dropdown && dropdownButton && 
                !dropdown.contains(e.target as Node) && 
                !dropdownButton.contains(e.target as Node)) {
              dropdown.classList.add('hidden');
            }
          });
        }
      });
    </script>
  </body>
</html>
