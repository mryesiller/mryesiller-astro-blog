---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import { languages } from '../../../i18n/ui';
import { useTranslations, useTranslatedPath } from '../../../i18n/utils';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const categories = [...new Set(posts.map(post => post.data.category))];
  
  return Object.keys(languages).flatMap(lang => {
    // Filter posts by language for each language path
    const langPosts = posts.filter(post => post.data.lang === lang);
    
    return categories.map(category => ({
      params: { lang, category },
      props: { 
        posts: langPosts.filter(post => post.data.category === category),
        category 
      },
    }));
  });
}

const { lang, category } = Astro.params;
const { posts } = Astro.props;

const t = useTranslations(lang as keyof typeof languages);
const translatePath = useTranslatedPath(lang as keyof typeof languages);

let title, description;

switch(category) {
  case 'dev':
    title = t('nav.dev');
    description = 'Deep dives into software development, coding tutorials, and best practices';
    break;
  case 'ai':
    title = t('nav.ai');
    description = 'Exploring the latest in artificial intelligence and machine learning';
    break;
  case 'daily':
    title = t('nav.daily');
    description = 'Day-to-day experiences, tips, and stories from the tech world';
    break;
  default:
    title = category;
    description = 'Articles in this category';
}
---

<Layout title={title}>
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <a href={translatePath('/')} class="text-primary-600 hover:text-primary-700 flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L4.414 9H17a1 1 0 110 2H4.414l5.293 5.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Back to Home
      </a>
    </div>
    
    <header class="text-center mb-12">
      <h1 class="text-4xl font-serif font-bold mb-4">{title}</h1>
      <p class="text-xl text-gray-600 dark:text-gray-300">{description}</p>
    </header>

    <div class="grid gap-8">
      {posts.map(post => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200">
          <div class="p-8">
            <div class="text-sm text-primary-600 dark:text-primary-400 mb-2">{post.data.category.toUpperCase()}</div>
            <h2 class="text-2xl font-bold mb-4">
              <a 
                href={translatePath(`/blog/${post.slug}`)}
                class="text-gray-900 dark:text-gray-100 hover:text-primary-600 dark:hover:text-primary-400 transition-colors duration-200"
              >
                {post.data.title}
              </a>
            </h2>
            <p class="text-gray-600 dark:text-gray-300 mb-6">{post.data.description}</p>
            <div class="flex justify-between items-center text-sm">
              <span class="text-gray-500 dark:text-gray-400">{post.data.author}</span>
              <time datetime={post.data.pubDate.toISOString()} class="text-gray-500 dark:text-gray-400">
                {new Date(post.data.pubDate).toLocaleDateString(lang, {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </time>
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</Layout> 