---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import { languages } from '../../../i18n/ui';
import { useTranslations, useTranslatedPath } from '../../../i18n/utils';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  return Object.keys(languages).flatMap(lang => {
    return posts.map(post => ({
      params: { 
        lang,
        slug: post.slug 
      },
      props: { post },
    }));
  });
}

const { lang } = Astro.params;
const { post } = Astro.props;
const { Content } = await post.render();

const t = useTranslations(lang as keyof typeof languages);
const translatePath = useTranslatedPath(lang as keyof typeof languages);
---

<Layout title={post.data.title}>
  <article class="max-w-3xl mx-auto">
    <div class="mb-8 flex items-center">
      <a href={translatePath('/')} class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 flex items-center gap-2 mr-4">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L4.414 9H17a1 1 0 110 2H4.414l5.293 5.293a1 1 0 010 1.414z" clip-rule="evenodd" />
        </svg>
        Back to Home
      </a>
      <a href={translatePath(`/category/${post.data.category}`)} class="text-primary-600 hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300 flex items-center gap-2">
        Back to {post.data.category.toUpperCase()} Blogs
      </a>
    </div>

    <header class="text-center mb-12">
      <div class="text-sm text-primary-600 dark:text-primary-400 mb-2">{post.data.category.toUpperCase()}</div>
      <h1 class="text-4xl font-serif font-bold mb-4">{post.data.title}</h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 mb-4">{post.data.description}</p>
      <div class="flex justify-center items-center gap-4 text-sm text-gray-500 dark:text-gray-400">
        <span>{post.data.author}</span>
        <span>â€¢</span>
        <time datetime={post.data.pubDate.toISOString()}>
          {new Date(post.data.pubDate).toLocaleDateString(lang, {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
      </div>
    </header>

    <div class="prose prose-lg mx-auto dark:prose-invert dark:text-gray-200">
      <Content />
    </div>
  </article>
</Layout> 